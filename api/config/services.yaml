# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter: ~

    App\EventListener\DeserializeListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', method: 'onKernelRequest', priority: 2 }
        # Autoconfiguration must be disabled to set a custom priority
        autoconfigure: false
        decorates: 'api_platform.listener.request.deserialize'
        arguments:
            $decorated: '@App\EventListener\DeserializeListener.inner'

#    App\EventListener\AuthenticationSuccessListener:
#        arguments: [ '%lexik_jwt_authentication.token_ttl%' ]
#        tags:
#            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccess, priority: -2 }

    App\Security\Slack\EventListener\SecurityListener:
        arguments:
            $slackSignSecret: '%env(SLACK_SIGN_SECRET)%'
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    App\HrTools\Personio\HttpClient:
        arguments:
            $personioClientId: '%env(PERSONIO_CLIENT_ID)%'
            $personioClientSecret: '%env(PERSONIO_CLIENT_SECRET)%'

    App\Fixtures\TimerProvider: ~

    App\Swagger\SwaggerDecorator:
        decorates: 'api_platform.swagger.normalizer.documentation'
        arguments: [ '@App\Swagger\SwaggerDecorator.inner' ]
        autoconfigure: false

    App\Fixtures\UserProvider:
        calls:
            - method: 'setPasswordEncoder'
              arguments:
                  - "@security.user_password_encoder.generic"

    App\Doctrine\SetUserListener:
        tags: [ doctrine.orm.entity_listener ]

    App\Doctrine\CreateUserListener:
        tags: [ doctrine.orm.entity_listener ]

